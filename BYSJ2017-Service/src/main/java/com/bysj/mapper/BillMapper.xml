<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bysj.mapper.BillMapper" >
  <resultMap id="BaseResultMap" type="com.bysj.pojo.Bill" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="accountid" property="accountid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIME" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, accountid, type, typeid, time, remark, num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Bill
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bysj.pojo.Bill" >
    insert into Bill (id, userId, accountid, 
      type, typeid, time, remark, 
      num)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{accountid,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, #{time,jdbcType=TIME}, #{remark,jdbcType=VARCHAR}, 
      #{num,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bysj.pojo.Bill" >
    insert into Bill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="accountid != null" >
        accountid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="accountid != null" >
        #{accountid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIME},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bysj.pojo.Bill" >
    update Bill
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="accountid != null" >
        accountid = #{accountid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIME},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bysj.pojo.Bill" >
    update Bill
    set userId = #{userid,jdbcType=INTEGER},
      accountid = #{accountid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIME},
      remark = #{remark,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>